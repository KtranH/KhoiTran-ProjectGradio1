{
  "3": {
    "inputs": {
      "ipadapter_file": "ip_adapter_plus_general.bin"
    },
    "class_type": "MZ_IPAdapterModelLoaderKolors",
    "_meta": {
      "title": "IPAdapterModelLoader(kolors) - Legacy"
    }
  },
  "4": {
    "inputs": {
      "weight": 0.8,
      "weight_type": "style transfer",
      "combine_embeds": "concat",
      "start_at": 0.2,
      "end_at": 0.8,
      "embeds_scaling": "V only",
      "model": [
        "17",
        0
      ],
      "ipadapter": [
        "3",
        0
      ],
      "image": [
        "33",
        0
      ],
      "clip_vision": [
        "5",
        0
      ]
    },
    "class_type": "MZ_IPAdapterAdvancedKolors",
    "_meta": {
      "title": "IPAdapterAdvanced(kolors) - Legacy"
    }
  },
  "5": {
    "inputs": {
      "clip_name": "clip-kolors.bin"
    },
    "class_type": "MZ_KolorsCLIPVisionLoader",
    "_meta": {
      "title": "MinusZone - KolorsCLIPVisionLoader - Legacy"
    }
  },
  "7": {
    "inputs": {
      "ckpt_name": "SDXL\\moonrideMixes_moonrideLightMix1.safetensors"
    },
    "class_type": "CheckpointLoaderSimple",
    "_meta": {
      "title": "Load Checkpoint"
    }
  },
  "8": {
    "inputs": {
      "seed": 714920196678239,
      "steps": 8,
      "cfg": 1,
      "sampler_name": "euler",
      "scheduler": "sgm_uniform",
      "denoise": 1,
      "preview_method": "auto",
      "vae_decode": "true",
      "model": [
        "4",
        0
      ],
      "positive": [
        "19",
        0
      ],
      "negative": [
        "19",
        1
      ],
      "latent_image": [
        "11",
        0
      ],
      "optional_vae": [
        "7",
        2
      ],
      "script": [
        "12",
        0
      ]
    },
    "class_type": "KSampler (Efficient)",
    "_meta": {
      "title": "KSampler (Efficient)"
    }
  },
  "9": {
    "inputs": {
      "text": [
        "16",
        0
      ],
      "clip": [
        "17",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "10": {
    "inputs": {
      "text": "worst quality, low quality",
      "clip": [
        "17",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "11": {
    "inputs": {
      "width": 512,
      "height": 768,
      "batch_size": 1
    },
    "class_type": "EmptyLatentImage",
    "_meta": {
      "title": "Empty Latent Image"
    }
  },
  "12": {
    "inputs": {
      "upscale_type": "latent",
      "hires_ckpt_name": "(use same)",
      "latent_upscaler": "ttl_nn.SDXL",
      "pixel_upscaler": "4x-UltraSharp.pth",
      "upscale_by": 1.25,
      "use_same_seed": false,
      "seed": 436115175957669,
      "hires_steps": 4,
      "denoise": 0.5,
      "iterations": 1,
      "use_controlnet": false,
      "control_net_name": "SD1.5\\control_sd15_inpaint_depth_hand_fp16.safetensors",
      "strength": 1,
      "preprocessor": "none",
      "preprocessor_imgs": false
    },
    "class_type": "HighRes-Fix Script",
    "_meta": {
      "title": "HighRes-Fix Script"
    }
  },
  "13": {
    "inputs": {
      "model": "Florence-2-large-PromptGen-v2.0",
      "precision": "fp16",
      "attention": "sdpa"
    },
    "class_type": "Florence2ModelLoader",
    "_meta": {
      "title": "Florence2ModelLoader"
    }
  },
  "14": {
    "inputs": {
      "text_input": "",
      "task": "detailed_caption",
      "fill_mask": false,
      "keep_model_loaded": false,
      "max_new_tokens": 1024,
      "num_beams": 3,
      "do_sample": true,
      "output_mask_select": "",
      "seed": 29882083308961,
      "image": [
        "33",
        0
      ],
      "florence2_model": [
        "13",
        0
      ]
    },
    "class_type": "Florence2Run",
    "_meta": {
      "title": "Florence2Run"
    }
  },
  "16": {
    "inputs": {
      "action": "append",
      "tidy_tags": "yes",
      "text_a": "chibi, cute style, clear background, black background, Stickers, Sticker, simple details",
      "text_b": [
        "14",
        2
      ],
      "text_c": ""
    },
    "class_type": "StringFunction|pysssss",
    "_meta": {
      "title": "String Function üêç"
    }
  },
  "17": {
    "inputs": {
      "lora_name": "SDXL\\3DRedmond-3DRenderStyle-3DRenderAF.safetensors",
      "strength_model": 1,
      "strength_clip": 1,
      "model": [
        "21",
        0
      ],
      "clip": [
        "21",
        1
      ]
    },
    "class_type": "LoraLoader",
    "_meta": {
      "title": "Load LoRA"
    }
  },
  "18": {
    "inputs": {
      "control_net_name": "SDXL\\controlnet-canny-sdxl-1.0\\diffusion_pytorch_model_V2.safetensors"
    },
    "class_type": "ControlNetLoader",
    "_meta": {
      "title": "Load ControlNet Model"
    }
  },
  "19": {
    "inputs": {
      "strength": 0.35000000000000003,
      "start_percent": 0,
      "end_percent": 1,
      "positive": [
        "9",
        0
      ],
      "negative": [
        "10",
        0
      ],
      "control_net": [
        "18",
        0
      ],
      "image": [
        "20",
        0
      ],
      "vae": [
        "7",
        2
      ]
    },
    "class_type": "ControlNetApplyAdvanced",
    "_meta": {
      "title": "Apply ControlNet"
    }
  },
  "20": {
    "inputs": {
      "preprocessor": "CannyEdgePreprocessor",
      "resolution": 512,
      "image": [
        "33",
        0
      ]
    },
    "class_type": "AIO_Preprocessor",
    "_meta": {
      "title": "AIO Aux Preprocessor"
    }
  },
  "21": {
    "inputs": {
      "lora_name": "SDXL\\aodaixl.safetensors",
      "strength_model": 0.3,
      "strength_clip": 0.3,
      "model": [
        "7",
        0
      ],
      "clip": [
        "7",
        1
      ]
    },
    "class_type": "LoraLoader",
    "_meta": {
      "title": "Load LoRA"
    }
  },
  "33": {
    "inputs": {
      "image": "ComfyUI_00001_-assets\\ComfyUI_00001_.png [output]"
    },
    "class_type": "LoadImageFromPath",
    "_meta": {
      "title": "Load Image From Path"
    }
  },
  "34": {
    "inputs": {
      "file_path": "D:\\\\ProjectPython\\\\gradioApp\\\\output\\\\img2Img",
      "images": [
        "8",
        5
      ]
    },
    "class_type": "SaveImageToPath",
    "_meta": {
      "title": "Save Image To Path"
    }
  }
}